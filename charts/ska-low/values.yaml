display: ":0"
xauthority: "~/.Xauthority"

global:
  labels:
    app: ska-skampi
  minikube: true
  operator: true
  annotations:
    skampi: "true"
    app.gitlab.com/app: skampi
    app.gitlab.com/env: ska
  sub-system:
    tango-base:
      enabled: false
    ska-tango-base:
      enabled: false
    ska-taranta:
      enabled: false
  retry:
    - "--sleep=1"
    - "--tries=6"
  tango_host: databaseds-tango-base:10000
  device_server_port: 45450
  cluster_domain: cluster.local
  dsconfig:
    timeout: 300s
    image:
      registry: artefact.skao.int
      image: ska-tango-images-tango-dsconfig
      tag: 1.5.1
      pullPolicy: IfNotPresent
  itango:
    image:
      registry: artefact.skao.int
      image: ska-tango-images-tango-itango
      tag: 9.3.5
      pullPolicy: IfNotPresent

ska-landingpage:
  legacy_compatibility: true
  enabled: true
  MVPInstance: ska-low

ska-ser-skuid:
  legacy_compatibility: true
  enabled: true
  skuid:
    use_pv: false
    config:
      generator_id: mvp01

ska-tango-base:
  enabled: true
  vnc:
    replicas: 1
    enabled: true
  tangorest:
    replicas: 1
    enabled: true
    resources:
      requests:
        cpu: 100m # 100m = 0.1 CPU
        memory: 128Mi # 256Mi = 0.25 GB mem
        ephemeral-storage: 256Mi
      limits:
        cpu: 200m # 100m = 0.1 CPU
        memory: 768Mi # 256Mi = 0.25 GB mem
        ephemeral-storage: 256Mi
  tangotest:
    enabled: true
  ingress:
    enabled: true
    hostname: k8s.stfc.skao.int
  tangodb:
    use_pv: false

# mccs:
#   ska-tango-base:
#     enabled: false
#   cli:
#     enabled: false
#   ska-mccs:
#     enabled: true
#   project:
#     name: mccs
#     image:
#       registry: nexus.engageska-portugal.pt/ska-docker
#       image: ska-low-mccs
#       tag: latest
#       pullPolicy: IfNotPresent

ska-taranta:
  legacy_compatibility: true
  enabled: true
  ingress:
    enabled: true
    nginx: true
    hostname: low.k8s.stfc.skao.int
  tangogql:
    replicas: 3
    resources:
      requests:
        cpu: 600m # 600m = 0.6 CPU
        memory: 512Mi # 512Mi = 0.5 GB mem
      limits:
        cpu: 1000m # 1000m = 1 CPU
        memory: 1024Mi # 1024Mi = 1 GB mem

ska-sdp:
  legacy_compatibility: true
  enabled: true
  dsconfig:
    image:
      tag: 1.5.9
  lmc:
    prefix: low
    nsubarray: 3
  console:
    enabled: true
  data-pvc:
    name: shared
    create:
      enabled: true
      size: 20Gi
      storageClassName: nfss1
  ska-sdp-qa:
    kafka:
      resources:
        limits:
          cpu: 750m
          memory: 1024Mi
        requests:
          cpu: 250m
          memory: 500Mi
      livenessProbe:
        initialDelaySeconds: 30
        failureThreshold: 5
      zookeeper:
        resources:
          requests:
            cpu: 100m
  ska-tango-base:
    enabled: false

ska-tango-archiver:
  enabled: true
  legacy_compatibility: true
  telescope: SKA-low
  dbname: default_mvp_archiver_db

ska-tmc-centralnode:
  legacy_compatibility: true
  enabled: false
  telescope: SKA-low
  deviceServers:
    centralnode:
      enabled: true

ska-low-cbf:
  legacy_compatibility: true
  enabled: true
  ska-low-cbf-conn:
    enabled: false
  global:
    minikube: false
  deviceServers:
    controller:
      name: "controller-{{.Release.Name}}"
      function: ska-low-cbf-control
      domain: ska-low-cbf
      command: "python3 /app/src/ska_low_cbf/controller/controller_device.py"
      instances: ["default"]
      server:
        name: "controller_device"
        instances:
          - name: "default"
            classes:
            - name: "LowCbfController"
              devices:
              - name: "low-cbf/control/0"
                properties:
                - name: "polled_attr"
                  values:
                  - "adminMode"
                  - "1000"
                attribute_properties:
                - attribute: "adminMode"
                  properties:
                  - name: "abs_change"
                    values:
                    - "-1"
                    - "1"
      depends_on:
        - device: low-cbf/subarray/01
        - device: low-cbf/allocator/0
      image:
        registry: "{{.Values.cbf.image.registry}}"
        image: "{{.Values.cbf.image.image}}"
        tag: "{{.Values.cbf.image.tag}}"
        pullPolicy: "{{.Values.cbf.image.pullPolicy}}"


    subarray:
      name: "subarray-{{.Release.Name}}"
      function: ska-low-cbf-subarray
      domain: ska-low-cbf
      command: "python3 /app/src/ska_low_cbf/subarray/subarray_device.py"
      instances: ["default"]
      server:
        name: "subarray_device"
        instances:
          - name: "default"
            classes:
            - name: "LowCbfSubarray"
              devices:
              - name: "low-cbf/subarray/01"
                properties:
                - name: "polled_attr"
                  values:
                  - "adminMode"
                  - "1000"
                  - "healthState"
                  - "1000"
                  - "obsMode"
                  - "1000"
                  - "obsState"
                  - "1000"
                  - "scanID"
                  - "1000"
                attribute_properties:
                - attribute: "adminMode"
                  properties:
                  - name: "abs_change"
                    values:
                    - "-1"
                    - "1"
                - attribute: "healthState"
                  properties:
                  - name: "abs_change"
                    values:
                    - "-1"
                    - "1"
                - attribute: "obsMode"
                  properties:
                  - name: "abs_change"
                    values:
                    - "-1"
                    - "1"
                - attribute: "obsState"
                  properties:
                  - name: "abs_change"
                    values:
                    - "-1"
                    - "1"
                - attribute: "scanID"
                  properties:
                  - name: "abs_change"
                    values:
                    - "-1"
                    - "1"
      depends_on:
        - device: low-cbf/allocator/0
      image:
        registry: "{{.Values.cbf.image.registry}}"
        image: "{{.Values.cbf.image.image}}"
        tag: "{{.Values.cbf.image.tag}}"
        pullPolicy: "{{.Values.cbf.image.pullPolicy}}"

    allocator:
      name: "allocator-{{.Release.Name}}"
      function: ska-low-cbf-alloc
      domain: ska-low-cbf
      command: "python3 /app/src/ska_low_cbf/allocator/allocator_device.py"
      instances: ["default"]
      server:
        name: "allocator_device"
        instances:
          - name: "default"
            classes:
            - name: "LowCbfAllocator"
              devices:
              - name: "low-cbf/allocator/0"
                properties:
                - name: "polled_attr"
                  values:
                  - "adminMode"
                  - "1000"
                  - "healthState"
                  - "1000"
                attribute_properties:
                - attribute: "adminMode"
                  properties:
                  - name: "abs_change"
                    values:
                    - "-1"
                    - "1"
                - attribute: "healthState"
                  properties:
                    - name: "abs_change"
                      values:
                        - "-1"
                        - "1"

      depends_on:
        - device: sys/database/2
      image:
        registry: "{{.Values.cbf.image.registry}}"
        image: "{{.Values.cbf.image.image}}"
        tag: "{{.Values.cbf.image.tag}}"
        pullPolicy: "{{.Values.cbf.image.pullPolicy}}"


ska-low-cbf-proc:
  legacy_compatibility: true
  enabled: true

ska-csp-lmc-low:
  legacy_compatibility: true
  enabled: true

## tmc
ska-tmc-low:
  legacy_compatibility: true
  enabled: true
  telescope: SKA-low