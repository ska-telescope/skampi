ARG base_image="python:3.9.5-alpine"
FROM $base_image AS builder

# set path
ENV PYTHONPATH=${PYTHONPATH}:../:/

# Add Alpine basic build dependencies
RUN apk add --no-cache \
    alpine-sdk \
    build-base \
    --virtual build-dependencies \
    linux-headers \
    make

# Copy poetry.lock* in case it doesn't exist in the repo
COPY requirements.txt ./

# Install Python runtime dependencies
RUN pip3 install -r /requirements.txt --prefix /app

ARG base_image="python:3.9.5-alpine"
FROM $base_image
LABEL \
      author="Piers Harding <Piers.Harding@skao.int>" \
      description="This image illustrates build dependencies" \
      license="Apache2.0" \
      int.skao.team="Systems Team" \
      int.skao.website="https://gitlab.com/ska-telescope/sdi/ska-ser-containerisation-and-orchestration"

# point to built libraries - to be copied below
ENV PYTHONPATH=/app/lib/python3.9/site-packages

# do not buffer stdout - so we get the logs
ENV PYTHONUNBUFFERED=1

# copy the built library dependencies from the builder stage
COPY --from=builder /app /app

# Create the user for running the app
RUN adduser -h /app -D app
WORKDIR /app
USER app

# copy over application
COPY ./echo.py /app/echo.py

# expose ports - bad directive - illegal port!!!!
EXPOSE 80800

# default launcher for app
ENTRYPOINT ["/usr/local/bin/python3"]
CMD ["/app/echo.py"]
