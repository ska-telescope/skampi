
.tags_default: &tags_default
- k8srunner

.tags_psi_low: &tags_psi_low
- k8srunner-psi-low

.uninstall_template: &uninstall_definition
  script:
  - &uninstall_scripts |
    make uninstall
    kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    make delete_namespace
    make delete_sdp_namespace
  only:
    refs:
      - master
    variables:
      - $DELETE == "true"

# .create_k8s_creds: &create_k8s_creds
# - bash scripts/gitlab_section.sh creds "Create K8s Credentials"
#   apt-get -y update && apt-get install -y curl ca-certificates jq --no-install-recommends
# - curl -s https://gitlab.com/ska-telescope/templates-repository/-/raw/master/scripts/namespace_auth.sh | bash -s $SERVICE_ACCOUNT $KUBE_NAMESPACE $KUBE_NAMESPACE_SDP || true


# .deploy_template: &deploy_definition
#   script:
#   - make install-or-upgrade
#   - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
#   artifacts:
#     name: "$CI_PROJECT_NAME-$CI_JOB_ID"
#     paths:
#       - "build/"
#     reports:
#       junit: build/report.xml
#     when: always

# .test_template: &test_definition
#   script:
#   - ARCHIVER_DBNAME=$(echo $ARCHIVER_DBNAME | tr '-' '_')
#   - bash scripts/gitlab_section.sh vars "Make config dump" make vars
#   - make install-or-upgrade ARCHIVER_DBNAME=$ARCHIVER_DBNAME || true
#   - bash scripts/gitlab_section.sh kube_res "Kubernetes resources dump"
#     kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
#   - bash scripts/gitlab_section.sh archiver "Archiver configuration"
#     make configure-archiver
#   - make k8s_test
#   artifacts:
#     name: "$CI_PROJECT_NAME-$CI_JOB_ID"
#     paths:
#       - "build/"
#     reports:
#       junit: build/report.xml
#     when: always
#   after_script:
#   - make links

# .psi_test_template: &psi_test_definition
#   script:
#   - bash scripts/gitlab_section.sh vars "Make config dump" make vars
#   - make install-or-upgrade || true
#   - bash scripts/gitlab_section.sh kube_res "Kubernetes resources dump"
#     kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
#   - make k8s_test
#   artifacts:
#     name: "$CI_PROJECT_NAME-$CI_JOB_ID"
#     paths:
#       - "build/"
#     reports:
#       junit: build/report.xml
#     when: always

# .stress_test_template: &stress_test_definition
#   cache: {}
#   needs: []
#   script:
#   # We specifically need Bash for $SECONDS
#   - bash scripts/run-stresstest.sh $STRESS_TEST_DURATION
#   - mv logs $CI_PROJECT_NAME-$CI_JOB_ID
#   - tar cJf logs.tar.xz $CI_PROJECT_NAME-$CI_JOB_ID/*/k8s_dump.txt
#   artifacts:
#     name: "$CI_PROJECT_NAME-$CI_JOB_ID"
#     paths:
#       - logs.tar.xz
#     when: always

# .xray_upload: &xray_upload
#   after_script:
#   - &xray_upload_scripts |
#     if [ -f build/cucumber.json ]; then
#     bash scripts/gitlab_section.sh install_skallop "Installing Skallop Requirements" pip3 install -U "ska-ser-skallop>=2.1.0"  --extra-index-url https://artefact.skao.int/repository/pypi-internal/simple
#     /usr/local/bin/xtp-xray-upload -f build/cucumber.json -v
#     fi
#   - make links
