---
# ################################################
# # SKA Mid CI Stages
# ################################################

# Mid merge blocking job - must pass for pipeline success
mid-test:
  stage: test
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_PIPELINE_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_PIPELINE_ID-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_PIPELINE_ID-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_PIPELINE_ID"
    ARCHIVER_DBNAME: "${CONFIG}_archiver_db"
    DISABLE_MAINTAIN_ON: "True"
    OET_INGRESS_ENABLED: "true"
    SKA_TELESCOPE: "SKA-${CONFIG}"
    CENTRALNODE_FQDN: "ska_${CONFIG}/tm_central/central_node"
    SUBARRAYNODE_FQDN_PREFIX: "ska_${CONFIG}/tm_subarray_node"
    ODA_DEPLOYMENT_ENABLED: "true"
    ODA_URI: "http://ska-db-oda-rest-$HELM_RELEASE.$KUBE_NAMESPACE:5000/$KUBE_NAMESPACE/api/v1"
    TEST_ENV: "BUILD_IN"
    ATTR_SYNCH_ENABLED_GLOBALLY: "True"
    ADDMARKS: (csp_startup or sdp)
    EXIT_AT_FAIL: "False"
    CAPTURE_LOGS: "True"
    SKALLOP_LOG_FILTER_ERRORS: "True"
    DEBUG_ENTRYPOINT: "True"
    DEBUG_ENTRYPOINT_EXTENDED: "True"
    LIVE_LOGGING_EXTENDED: "True"
    SHOW_STEP_FUNCTIONS: "True"
    #CHECK_INFRA_PER_TEST: "True"
    USE_OLD_DISH_IDS: "True"
    COUNT: 1
  extends:
    - .tags_default
    - .set_dbname
  script:
    - !reference [.deploy_chart_before, before_script]
    - !reference [.test_deployment, script]
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always

# Mid on-demand deployment
mid_deploy_on_demand_techops:
  stage: on-demand
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    ARCHIVER_DBNAME: "${CONFIG}_archiver_db"
    ARCHIVER_ENABLED: "true"
    OET_INGRESS_ENABLED: "true"
    SKA_TELESCOPE: "SKA-${CONFIG}"
    CENTRALNODE_FQDN: "ska_${CONFIG}/tm_central/central_node"
    SUBARRAYNODE_FQDN_PREFIX: "ska_${CONFIG}/tm_subarray_node"
    ODA_URI: "http://ska-db-oda-rest-test.button-dev-ska-db-oda:5000/button-dev-ska-db-oda/api/v1"
  extends:
    - .tags_default
    - .set_dbname
    - .deploy_chart_before
  script:
    - make skampi-links
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: mid_destroy_on_demand_techops
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
  when: manual
  allow_failure: true # need to keep this to unlock the pipeline

mid_destroy_on_demand_techops:
  stage: on-demand
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    ARCHIVER_DBNAME: "${CONFIG}_archiver_db"
    OET_INGRESS_ENABLED: "true"
  extends:
    - .tags_default
    - .set_dbname
    - .uninstall_chart
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    action: stop
  when: manual
  allow_failure: true # need to keep this to unlock the pipeline

mid_deploy_on_demand_dp:
  stage: on-demand
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    INGRESS_HOST: "sdhp.stfc.skao.int"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    ARCHIVER_DBNAME: "${CONFIG}_archiver_db"
    ARCHIVER_ENABLED: "false"
    OET_INGRESS_ENABLED: "true"
    SKA_TELESCOPE: "SKA-${CONFIG}"
    CENTRALNODE_FQDN: "ska_${CONFIG}/tm_central/central_node"
    SUBARRAYNODE_FQDN_PREFIX: "ska_${CONFIG}/tm_subarray_node"
    ODA_URI: "http://ska-db-oda-rest-test.button-dev-ska-db-oda:5000/button-dev-ska-db-oda/api/v1"
  extends:
    - .set_dbname
    - .deploy_chart_before
  tags:
    - ska-k8srunner-dp
  script:
    - make skampi-links LOADBALANCER_IP=10.100.10.1
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: mid_destroy_on_demand_dp
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
  when: manual
  allow_failure: true # need to keep this to unlock the pipeline

mid_destroy_on_demand_dp:
  stage: on-demand
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    INGRESS_HOST: "sdhp.stfc.skao.int"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    ARCHIVER_DBNAME: "${CONFIG}_archiver_db"
    OET_INGRESS_ENABLED: "true"
  extends:
    - .set_dbname
    - .uninstall_chart
  tags:
    - ska-k8srunner-dp
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    action: stop
  when: manual
  allow_failure: true # need to keep this to unlock the pipeline

# Mid integration
.mid-integration-config:
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: ska-$CONFIG
    K8S_CHART: $DEPLOYMENT_CONFIGURATION
    KUBE_NAMESPACE: integration-$CONFIG
    KUBE_NAMESPACE_SDP: integration-$CONFIG-sdp
    HELM_RELEASE: $CONFIG
    SERVICE_ACCOUNT: integration-svc-$CONFIG
    ARCHIVER_DBNAME: integration_${CONFIG}_archiver_db
    INGRESS_HOST: k8s.stfc.skao.int
    KEEP_NAMESPACE: "true"
    SKA_TELESCOPE: SKA-$CONFIG
    CENTRALNODE_FQDN: ska_$CONFIG/tm_central/central_node
    SUBARRAYNODE_FQDN_PREFIX: ska_$CONFIG/tm_subarray_node
    ODA_URI: http://ska-db-oda-rest-test.button-dev-ska-db-oda:5000/button-dev-ska-db-oda/api/v1
  environment:
    name: integration-$CONFIG

mid-deploy-integration:
  extends:
    - deploy-integration
    - .mid-integration-config
  variables:
    KUBE_NAMESPACE: integration-$CONFIG
  after_script:
    - make skampi-links
  environment:
    name: integration-$CONFIG
    on_stop: mid-stop-integration
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

mid-info-integration:
  extends:
    - info-integration
    - .mid-integration-config
  variables:
    KUBE_NAMESPACE: integration-$CONFIG
  environment:
    name: integration-$CONFIG
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: manual

mid-stop-integration:
  extends:
    - stop-integration
    - .mid-integration-config
  needs:
    - mid-deploy-integration
  variables:
    KUBE_NAMESPACE: integration-$CONFIG
  environment:
    name: integration-$CONFIG
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: manual

mid-redeploy-integration:
  extends:
    - redeploy-integration
    - .mid-integration-config
  variables:
    KUBE_NAMESPACE: integration-$CONFIG
  environment:
    name: integration-$CONFIG
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: manual

# Mid staging
.mid-staging-config:
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: ska-$CONFIG
    K8S_CHART: $DEPLOYMENT_CONFIGURATION
    KUBE_NAMESPACE: staging-$CONFIG
    KUBE_NAMESPACE_SDP: staging-$CONFIG-sdp
    HELM_RELEASE: $CONFIG
    SERVICE_ACCOUNT: staging-svc-$CONFIG
    ARCHIVER_DBNAME: staging_${CONFIG}_archiver_db
    INGRESS_HOST: k8s.stfc.skao.int
    KEEP_NAMESPACE: "true"
    SKA_TELESCOPE: SKA-$CONFIG
    CENTRALNODE_FQDN: ska_$CONFIG/tm_central/central_node
    SUBARRAYNODE_FQDN_PREFIX: ska_$CONFIG/tm_subarray_node
    ODA_URI: http://ska-db-oda-rest-test.button-dev-ska-db-oda:5000/button-dev-ska-db-oda/api/v1
  environment:
    name: staging-$CONFIG

mid-deploy-staging:
  extends:
    - deploy-staging
    - .mid-staging-config
  needs:
    - mid-deploy-integration
  variables:
    KUBE_NAMESPACE: staging-$CONFIG
  after_script:
    - make skampi-links
  environment:
    name: staging-$CONFIG
    on_stop: mid-stop-staging
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
  rules:
    - if: $CI_COMMIT_TAG

mid-info-staging:
  extends:
    - info-staging
    - .mid-staging-config
  variables:
    KUBE_NAMESPACE: staging-$CONFIG
  environment:
    name: staging-$CONFIG
  rules:
    - if: $CI_COMMIT_TAG
      when: manual

mid-stop-staging:
  extends:
    - stop-staging
    - .mid-staging-config
  needs:
    - mid-deploy-staging
  variables:
    KUBE_NAMESPACE: staging-$CONFIG
  environment:
    name: staging-$CONFIG
  rules:
    - if: $CI_COMMIT_TAG
      when: manual

mid-redeploy-staging:
  extends:
    - redeploy-staging
    - .mid-staging-config
  variables:
    KUBE_NAMESPACE: staging-$CONFIG
  environment:
    name: staging-$CONFIG
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
