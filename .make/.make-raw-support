#!/bin/bash

# Shellscript support function file for Raw package Make targets

# Find and load the release support script
CURRENT_SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

function buildRaw() {
    if [ -z "$1" ] ; then
		echo "buildRaw: Missing RAW_PKG"
        exit 1
	else
        RAW_PKG="$1"
	fi
    if [ -z "$2" ] ; then
		echo "buildRaw: Missing VERSION"
        exit 1
	else
        VERSION="$2"
	fi

    if [ -z "$3" ] ; then
		echo "buildRaw: Missing RAW_OUTPUT_DIR"
        exit 1
	else
        RAW_OUTPUT_DIR="$3"
	fi

    echo "buildRaw: package to build: $RAW_PKG"
    echo "buildRaw: version: $VERSION"
    echo "buildRaw: output directory: $RAW_OUTPUT_DIR"

    mkdir -p $RAW_OUTPUT_DIR

    #TODO: tar all dir -> repository-name-version.tar.gz
    tar -zcf $RAW_OUTPUT_DIR/$RAW_PKG-$VERSION.tar.gz -C raw/$RAW_PKG .

    # Find and load the metadata support script
    . ${CURRENT_SCRIPT_DIR}/.make-metadata-support ; metadataPatch "$RAW_OUTPUT_DIR/$RAW_PKG-$VERSION.tar.gz" "MANIFEST.skao.int"

    echo "buildRaw: built package (with metadata): $(ls $RAW_OUTPUT_DIR/$RAW_PKG-$VERSION.tar.gz)"
}

function publishRaw() {
    if [ -z "$1" ] ; then
		echo "publishRaw: Missing RAW_PKG"
        exit 1
	else
        RAW_PKG="$1"
	fi
    if [ -z "$2" ] ; then
		echo "publishRaw: Missing VERSION"
        exit 1
	else
        VERSION="$2"
	fi

    if [ -z "$3" ] ; then
		echo "publishRaw: Missing RAW_OUTPUT_DIR"
        exit 1
	else
        RAW_OUTPUT_DIR="$3"
	fi
    RAW_FULL_PKG_PATH=$RAW_OUTPUT_DIR/$RAW_PKG-$VERSION.tar.gz

    if [ ! -f "${RAW_FULL_PKG_PATH}" ]; then
        echo "publishRaw: Archive does not exist: ${RAW_FULL_PKG_PATH} - aborting."
        exit 1
    fi

    echo "publishRaw: package to publish: $RAW_FULL_PKG_PATH"

    #upload the OUTPUT collections having metadata to CAR
    curl -v -u $CAR_RAW_USERNAME:$CAR_RAW_PASSWORD --upload-file $RAW_FULL_PKG_PATH $CAR_RAW_REPOSITORY_URL/;
}

