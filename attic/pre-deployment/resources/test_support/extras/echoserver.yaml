apiVersion: v1
kind: ConfigMap
metadata:
  name: echoserver-config
  labels:
    kubernetes.io/component: testware
data:
  httpechoserver.py: |
    import http.server
    import socketserver
    import sys


    class EchoRequestHandler(http.server.BaseHTTPRequestHandler):
        def do_POST(self):
            if self.path == '/echo':
                self._echo_post_payload()

        def _echo_post_payload(self):
            content_len = int(self.headers.get('content-length'))
            post_body = self.rfile.read(content_len).decode() # assume utf8

            print(post_body)
            sys.stdout.flush()

            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
            self.wfile.write(post_body)


    Handler = EchoRequestHandler

    with socketserver.TCPServer(("0.0.0.0", 9001), Handler) as httpd:
        print("Echo server serving at 0.0.0.0:9001")
        sys.stdout.flush()
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            pass
        finally:
            httpd.server_close()

---
apiVersion: v1
kind: Pod
metadata:
  name: echoserver
  labels:
    kubernetes.io/component: testware
spec:
  containers:
    - name: echoserver
      image: python:3.8
      command:
        - python
        - /var/data/httpechoserver.py
      ports:
        - containerPort: 9001
      volumeMounts:
        - mountPath: /var/data
          name: echoserver-volume
  volumes:
    - name: echoserver-volume
      configMap:
        name: echoserver-config
