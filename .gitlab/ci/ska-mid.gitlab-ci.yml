# ################################################
# # SKA Mid CI Stages
# ################################################

# mid merge blocking job - must pass for pipeline success
mid_deploy_test:
  stage: test
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_JOB_ID"
    ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
    MARK: "not infra"
  extends:
    - .tags_default
    - .deploy_chart_before
    - .test_deployment
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always
  retry: 2

# mid deploy to integration - on merge to default
mid_deploy_integration:
  stage: deploy_integration
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "integration-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "integration-$CONFIG"
    KUBE_NAMESPACE_SDP: "integration-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-integration-$CONFIG"
    ARCHIVER_DBNAME: "integration_$CONFIG_archiver_db"
    MARK: "not infra"
  extends:
    - .tags_default
    - .uninstall_chart_before
    - .deploy_chart_and_test_integration
  environment:
    name: "integration-mid"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    on_stop: mid_uninstall_integration
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always
  only:
    refs:
      - master
  except:
    variables:
      - $STRESS_TEST_DURATION

# teardown integration on stop
mid_uninstall_integration:
  stage: clean_integration
  extends:
    - .tags_default
    - .uninstall_chart
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "integration-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "integration-$CONFIG"
    KUBE_NAMESPACE_SDP: "integration-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-integration-$CONFIG"
    ARCHIVER_DBNAME: "integration_$CONFIG_archiver_db"
    KEEP_NAMESPACE: "true"
  only:
    refs:
      - tags
    variables:
      - $DELETE == "true"
  environment:
    name: "integration-mid"
    action: stop

# deploy mid staging on tag
mid_deploy_staging:
  stage: deploy_staging
  extends:
    - .tags_default
    - .uninstall_chart_before
    - .deploy_chart
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "staging-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "staging-$CONFIG"
    KUBE_NAMESPACE_SDP: "staging-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-staging-$CONFIG"
    ARCHIVER_DBNAME: "staging_$CONFIG_archiver_db"
    MARK: "not infra"
    KEEP_NAMESPACE: "true"
  environment:
    name: "staging-mid"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    on_stop: mid_uninstall_staging
  only:
    refs:
      - tags

# teardown staging on stop
mid_uninstall_staging:
  stage: clean_staging
  extends:
    - .tags_default
    - .uninstall_chart
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "staging-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "staging-$CONFIG"
    KUBE_NAMESPACE_SDP: "staging-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-staging-$CONFIG"
    ARCHIVER_DBNAME: "staging_$CONFIG_archiver_db"
    KEEP_NAMESPACE: "true"
  only:
    refs:
      - tags
    variables:
      - $DELETE == "true"
  environment:
    name: "staging-mid"
    action: stop

# Mid on-demand deployment
mid_on_demand_deploy:
  stage: build
  variables:
    CONFIG: mid
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
    ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
  extends:
    - .tags_default
    - .deploy_chart_before
  script:
    - make skampi-links
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
  when: manual
  allow_failure: true
