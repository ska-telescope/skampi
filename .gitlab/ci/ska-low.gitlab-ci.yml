# ################################################
# # SKA Low CI Stages
# ################################################

# low merge blocking job - must pass for pipeline success
low-test:
  stage: test
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_JOB_ID"
    ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
    DISABLE_MAINTAIN_ON: "True"
    TEST_ENV: "BUILD_OUT"
    COUNT: 1
    TEL: low
  extends:
    - .tags_default
    - .deploy_chart_before
    - .uninstall_chart_after
  script:
    - echo "########## Running Skampi Acceptance and End to End Tests"
    - make python-test
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always
  retry: 2

# low deploy to integration - on merge to default
low_deploy_integration:
  stage: deploy_integration
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "integration-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "integration-$CONFIG"
    KUBE_NAMESPACE_SDP: "integration-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-integration-$CONFIG"
    ARCHIVER_DBNAME: "integration_$CONFIG_archiver_db"
    MARK: "not infra"
  extends:
    - .tags_default
    - .uninstall_chart_before
    - .deploy_chart_and_test_integration
  environment:
    name: "integration-low"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    on_stop: low_uninstall_integration
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always
  rules:
    - if: $STRESS_TEST_DURATION
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

# teardown integration on stop
low_uninstall_integration:
  stage: clean_integration
  extends:
    - .tags_default
    - .uninstall_chart
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "integration-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "integration-$CONFIG"
    KUBE_NAMESPACE_SDP: "integration-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-integration-$CONFIG"
    ARCHIVER_DBNAME: "integration_$CONFIG_archiver_db"
    KEEP_NAMESPACE: "true"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $DELETE == "true"
  environment:
    name: "integration-low"
    action: stop

# deploy low staging on tag
low_deploy_staging:
  stage: deploy_staging
  extends:
    - .tags_default
    - .uninstall_chart_before
    - .deploy_chart
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "staging-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "staging-$CONFIG"
    KUBE_NAMESPACE_SDP: "staging-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-staging-$CONFIG"
    ARCHIVER_DBNAME: "staging_$CONFIG_archiver_db"
    MARK: "not infra"
    KEEP_NAMESPACE: "true"
  environment:
    name: "staging-low"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    on_stop: low_uninstall_staging
  rules:
    - if: $CI_COMMIT_TAG

# teardown staging on stop
low_uninstall_staging:
  stage: clean_staging
  extends:
    - .tags_default
    - .uninstall_chart
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "staging-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "staging-$CONFIG"
    KUBE_NAMESPACE_SDP: "staging-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-staging-$CONFIG"
    ARCHIVER_DBNAME: "staging_$CONFIG_archiver_db"
    KEEP_NAMESPACE: "true"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $DELETE == "true"
  environment:
    name: "staging-low"
    action: stop

# Low on-demand deployment
low_on_demand_deploy:
  stage: build
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
    ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
  extends:
    - .tags_default
    - .deploy_chart_before
  script:
    - make skampi-links
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
  when: manual
  allow_failure: true

# # ################################################
# # # SKA Low CI Stages
# # ################################################

# # Low specific job steps
# # testing environment (low_)
# .low_vars:
#   extends:
#     - .tags_default
#   variables:
#     HELM_RELEASE: "test-low"
#     KUBE_NAMESPACE: "integration-low"
#     KUBE_NAMESPACE_SDP: "integration-low-sdp"
#     DEPLOYMENT_CONFIGURATION: "ska-low"
#     KEEP_NAMESPACE: "true"
#     ARCHIVER_DBNAME: "integration_low_archiver_db"

# low_uninstall:
#   stage: clean
#   extends:
#     - .low_vars
#     - .only_on_master
#     - .uninstall_definition
#   environment:
#     name: "test-low"
#     action: stop
#   only:
#     refs:
#       - master
#     variables:
#       - $DELETE == "true"

# low_deploy:
#   stage: deploy
#   extends:
#     - .low_vars
#     - .only_on_master
#     - .deploy_definition
#   environment:
#     name: "test-low"
#     on_stop: low_uninstall

# low_test:
#   retry: 2
#   stage: test
#   extends:
#     - .low_vars
#     - .only_on_master
#     - .test_definition
#     - .xray_upload
#   variables:
#     MARK: "skalow or common"
#   environment:
#     name: "test-low"
#     url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
#     kubernetes:
#       # This repetition is needed for gitlab to parse the namespace correctly
#       namespace: $KUBE_NAMESPACE
#     on_stop: low_uninstall
#   # rules:
#   #   - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $STRESS_TEST_DURATION && $STRESS_TEST_DURATION != ""'
#   except:
#     variables:
#       - $STRESS_TEST_DURATION

# # low merge blocking job - must pass for pipeline success
# low_deploy_test_destroy:
#   stage: test
#   variables:
#     CONFIG: low
#     DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
#     HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
#     KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG"
#     KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG-sdp"
#     TANGO_DATABASE_DS: "databaseds-tango-base-test-$CI_JOB_ID"
#     SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_JOB_ID"
#     ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
#   extends:
#     - .tags_default
#     - .deploy_test_destroy_definition
#     - .xray_upload
#   environment:
#     name: "test-$CONFIG-branch"
#     kubernetes:
#       # This repetition is needed for gitlab to parse the namespace correctly
#       namespace: $KUBE_NAMESPACE
#   rules:
#     - if: $CI_COMMIT_TAG
#       when: never
#     # - if: '$CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH' # Run on push, not default
# # low on demand environment

# .low_on_demand_vars:
#   extends:
#     - .tags_default
#   variables:
#     DEPLOYMENT_CONFIGURATION: "ska-low"
#     HELM_RELEASE: "test-low-$CI_COMMIT_BRANCH"
#     KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low"
#     KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-sdp"
#     KEEP_NAMESPACE: "true" # to stop ns deletion before actual uninstall
#     TANGO_DATABASE_DS: "databaseds-tango-base-test-$CI_COMMIT_BRANCH"
#     SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
#     ARCHIVER_DBNAME: "$CI_COMMIT_BRANCH-low_archiver_db"

# Low on-demand deployment
# low_on_demand_deploy:
#   stage: build
#   variables:
#     CONFIG: low
#     DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
#     K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
#     HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
#     KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-$CONFIG"
#     KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-$CONFIG-sdp"
#     SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
#     ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
#   extends:
#     - .tags_default
#     - .deploy_chart_before
#   script:
#     - make skampi-links
#   environment:
#     name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
#     kubernetes:
#       # This repetition is needed for gitlab to parse the namespace correctly
#       namespace: $KUBE_NAMESPACE
#     url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
#   artifacts:
#     name: "$CI_PROJECT_NAME-$CI_JOB_ID"
#     paths:
#       - "build/"
#     reports:
#       junit: build/report.xml
#   when: manual
#   allow_failure: true
# low_on_demand_test:
#   stage: test
#   extends:
#     - .output_step_info
#     - .low_on_demand_vars
#     - .test_definition
#   variables:
#     MARK: "skalow or common"
#   #before_script:
#   # using reference as there seems to be a problem with extends
#   #- !reference [.create_k8s_creds, before_script]
#   environment:
#     name: "test-low/$CI_COMMIT_REF_NAME"
#     url: "http://$INGRESS_HOST/ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low/taranta"
#     kubernetes:
#       # This repetition is needed for gitlab to parse the namespace correctly
#       namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low
#     on_stop: low_on_demand_uninstall
#     auto_stop_in: 2 hours
#   # rules:
#   #   - if: "$CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $STRESS_TEST_DURATION"
#   #     when: manual
#   needs:
#     - low_on_demand_deploy
#   when: manual
#   only:
#     refs:
#       - branches
#   except:
#     refs:
#       - master

# low_on_demand_uninstall:
#   stage: cleanup
#   needs:
#     - low_on_demand_deploy
#   extends:
#     - .output_step_info
#     - .low_on_demand_vars
#     - .uninstall_definition
#     - .on_demand_definition # DEFINITION MUST BE ADDED LAST
#   variables:
#     HELM_RELEASE: "test-low-$CI_COMMIT_BRANCH"
#     KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low"
#     KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-sdp"
#     DEPLOYMENT_CONFIGURATION: "ska-low"
#     KEEP_NAMESPACE: "true" # to stop ns deletion before actual uninstall
#   environment:
#     name: "test-low/$CI_COMMIT_REF_NAME"
#     kubernetes:
#       # This repetition is needed for gitlab to parse the namespace correctly
#       namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low
#     action: stop
#   only:
#     - branches

# # staging environments

# low_uninstall_staging:
#   stage: clean_staging
#   extends:
#     - .output_step_info
#     - .tags_default
#     - .uninstall_definition
#   variables:
#     HELM_RELEASE: "staging-low"
#     KUBE_NAMESPACE: "staging-low"
#     KUBE_NAMESPACE_SDP: "staging-low-sdp"
#     DEPLOYMENT_CONFIGURATION: "ska-low"
#     KEEP_NAMESPACE: "true"
#   # rules:
#   #   - if: '$CI_COMMIT_TAG && $DELETE == "true"'
#   only:
#     refs:
#       - tags
#     variables:
#       - $DELETE == "true"
#   environment:
#     name: "staging-low"
#     action: stop

# low_deploy_staging:
#   stage: deploy_staging
#   extends:
#     - .output_step_info
#     - .tags_default
#   #  - .deploy_definition
#   variables:
#     HELM_REPO_NAME: "skatelescope"
#     UMBRELLA_CHART_PATH: "$HELM_REPO_NAME/mvp-low"
#     HELM_RELEASE: "staging-low"
#     KUBE_NAMESPACE: "staging-low"
#     KUBE_NAMESPACE_SDP: "staging-low-sdp"
#     DEPLOYMENT_CONFIGURATION: "ska-low"
#     KEEP_NAMESPACE: "true"
#   environment:
#     name: "staging-low"
#     url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
#     kubernetes:
#       # This repetition is needed for gitlab to parse the namespace correctly
#       namespace: $KUBE_NAMESPACE
#     on_stop: low_uninstall_staging
#   # rules:
#   #   - if: "$CI_COMMIT_TAG"
#   only:
#     refs:
#       - tags
#   # needs:
#   #   - job: low_uninstall_staging

# # Other

# get_sizes_low:
#   stage: debug
#   extends:
#     - .output_step_info
#   # - .tags_default
#   variables:
#     KUBE_NAMESPACE: "integration-low"
#     KEEP_NAMESPACE: "true"
#   script:
#     - make get_size_images
#   environment:
#     name: "test-low"
#   only:
#     refs:
#       - master
