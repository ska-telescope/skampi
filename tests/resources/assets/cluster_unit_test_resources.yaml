---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-test
data:
  hello.conf: |
    server {
        listen 80;

        root /usr/share/nginx/html;
        try_files /index.html =404;

        expires -1;

        sub_filter_once off;
        sub_filter 'server_hostname' '$hostname';
        sub_filter 'server_address' '$server_addr:$server_port';
        sub_filter 'server_url' '$request_uri';
        sub_filter 'server_date' '$time_local';
        sub_filter 'request_id' '$request_id';
    }

---
apiVersion: v1
kind: Service
metadata:
  name: nginx1
  labels:
    app: nginx1
    app.kubernetes.io/name: cluster-test
spec:
  selector:
    app: nginx1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment1
  labels:
    app: nginx1
    app.kubernetes.io/name: cluster-test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx1
  template:
    metadata:
      labels:
        app: nginx1
        app.kubernetes.io/name: cluster-test
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: Always
        ports:
          - containerPort: 80
            protocol: TCP
        volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: www-data
            #readOnly: true
          - name: test-config
            mountPath: /etc/nginx/conf.d
      volumes:
      - name: www-data
        persistentVolumeClaim:
          claimName: pvc-test
      - name: test-config
        configMap:
          name: cluster-test

---
apiVersion: v1
kind: Service
metadata:
  name: nginx2
  labels:
    app: nginx2
    app.kubernetes.io/name: cluster-test
spec:
  selector:
    app: nginx2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment2
  labels:
    app: nginx2
    app.kubernetes.io/name: cluster-test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx2
  template:
    metadata:
      labels:
        app: nginx2
        app.kubernetes.io/name: cluster-test
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: Always
        ports:
          - containerPort: 80
            protocol: TCP
        volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: www-data
            readOnly: true
          - name: test-config
            mountPath: /etc/nginx/conf.d
      volumes:
      - name: www-data
        persistentVolumeClaim:
          claimName: pvc-test
      - name: test-config
        configMap:
          name: cluster-test
 