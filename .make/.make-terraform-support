#!/bin/bash

# Shellscript support function file for Terraform Make targets

function terraformCheckFormat() {
    BASE_DIR=$1
    [ -f $BASE_DIR ] && BASE_DIR=$(dirname $BASE_DIR)
    echo "* Running format check for $BASE_DIR *"
    OUTPUT="./build/results/$TERRAFORM_LINT_TARGET_ID.format.log"
    if [ $(find $BASE_DIR -name "*.tf" -type f | wc -l) -eq 0 ]; then
        touch $OUTPUT
        echo "Skipping. No Terraform targets found !"
        return 0
    fi

    $TERRAFORM_VARS_BEFORE_FMT $TERRAFORM_RUNNER fmt -check -diff $TERRAFORM_SWITCHES_FOR_FMT "$BASE_DIR" 2>&1 > $OUTPUT
    RET=$?

    cat $OUTPUT
    if [ $RET -ne 0 ]; then
        echo "Report at: $OUTPUT"
        echo "Failed ❌ running fmt at '$BASE_DIR' ($RET)"
    fi
    return $RET
}

function terraformValidate() {
    BASE_DIR=$1
    [ -f $BASE_DIR ] && BASE_DIR=$(dirname $BASE_DIR)
    rm -rf $(find $BASE_DIR -name ".terraform" | xargs)
    echo "* Running validate for $BASE_DIR *"
    OUTPUT="./build/results/$TERRAFORM_LINT_TARGET_ID.validate.log"
    $TERRAFORM_LINT_VARS_BEFORE_INIT $TERRAFORM_RUNNER -chdir=$BASE_DIR init $TERRAFORM_LINT_SWITCHES_FOR_INIT >/dev/null &&
    $TERRAFORM_LINT_VARS_BEFORE_VALIDATE $TERRAFORM_RUNNER -chdir=$BASE_DIR validate $TERRAFORM_LINT_SWITCHES_FOR_VALIDATE 2>&1 > $OUTPUT
    RET=$?

    cat $OUTPUT
    if [ $RET -ne 0 ]; then
        echo "Report at: $OUTPUT"
        echo "Failed ❌ running validate at '$BASE_DIR' ($RET)"
    fi
    return $RET
}

function terraformLint() {
    BASE_DIR=$1
    [ -f $BASE_DIR ] && BASE_DIR=$(dirname $BASE_DIR)
    echo "* Running tflint for $BASE_DIR *"
    OUTPUT="./build/reports/linting-$TERRAFORM_LINT_TARGET_ID.tf.xml"
    $TERRAFORM_VARS_BEFORE_TFLINT $TERRAFORM_TFLINT_RUNNER $TERRAFORM_SWITCHES_FOR_TFLINT -f junit $BASE_DIR > $OUTPUT

    RET=$?
    if [ $RET -ne 0 ]; then
        cat $OUTPUT | grep -Eo "message=.*type=" | sed 's/.*"\(.*\)".*/** \1/'
        echo "Report at: $OUTPUT"
        echo "Failed ❌ running tflint at '$BASE_DIR': $RET"
    fi
    return $RET
}