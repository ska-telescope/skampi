#!/bin/bash

# Shellscript support function file for Rpm package Make targets

# Find and load the release support script
CURRENT_SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

function buildRpm() {
    if [ -z "$1" ] ; then
		echo "buildRpm: Missing VERSION"
        exit 1
	else
        VERSION="$1"
	fi

    if [ -z "$2" ] ; then
		echo "buildRpm: Missing RPM_OUTPUT_DIR"
        exit 1
	else
        RPM_OUTPUT_DIR="$2"
	fi

    # ST-1058: Skip a src folder if there is no CMakeLists.txt file
    if [ ! -f CMakeLists.txt ] ; then
        echo "buildRpm: Missing CMakeLists.txt"
        exit 2
    fi

    echo "buildRpm: version: $VERSION"
    echo "buildRpm: output directory: $RPM_OUTPUT_DIR"

    mkdir -p $RPM_OUTPUT_DIR
    RPM_ROOT_DIR=$( pwd )

    # ST-1058: Read the MANIFEST metadata
    MANIFEST=
    for METADATA in $(<MANIFEST.skao.int) ; do
        MANIFEST="$MANIFEST$METADATA\n"
    done
    # ST-1058: Add build folder and move to it
    cp .make/resources/rpm.spec.in $RPM_OUTPUT_DIR/
    cd $RPM_OUTPUT_DIR
    # ST-1058: Add metadata to package description
    MARKER="MANIFEST.skao.int"
    sed -i "s/$MARKER/$MARKER\n${MANIFEST//"/"/"\/"}/g" rpm.spec.in
    # ST-1058: Compile and package the RPM
    cmake \
        -DCPACK_RPM_USER_BINARY_SPECFILE=rpm.spec.in \
        -DCPACK_RPM_PACKAGER=ska-cicd-makefile \
        -DVERSION=$VERSION \
        $ADDITIONAL_CMAKE_PARAMS $RPM_ROOT_DIR
    make -j package
    cd -
    # ST-1058: Lint the package
    rpmlint -P $RPM_OUTPUT_DIR/*.rpm --config .make/resources/rpmlint.toml

    echo "buildRpm: built package (with metadata): $(ls $RPM_OUTPUT_DIR/*.rpm)"
}

function publishRpm() {
    if [ -z "$1" ] ; then
		echo "publishRpm: Missing VERSION"
        exit 1
	else
        VERSION="$1"
	fi

    if [ -z "$2" ] ; then
		echo "publishRpm: Missing RPM_OUTPUT_DIR"
        exit 1
	else
        RPM_OUTPUT_DIR="$2"
	fi

    RPM_FULL_PKG_PATH=$(ls $RPM_OUTPUT_DIR/*.rpm)

    if [ ! -f "${RPM_FULL_PKG_PATH}" ]; then
        echo "publishRpm: Archive does not exist: ${RPM_FULL_PKG_PATH} - aborting."
        exit 1
    fi

    echo "publishRpm: package to publish: $RPM_FULL_PKG_PATH"

    #upload the OUTPUT collections having metadata to CAR
    curl -v -u $CAR_RPM_USERNAME:$CAR_RPM_PASSWORD --upload-file $RPM_FULL_PKG_PATH $CAR_RPM_REPOSITORY_URL/;
}

