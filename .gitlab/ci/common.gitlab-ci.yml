# ################################################
# # Common CI Stages
# ################################################

# create namespace scoped credentials
.create_k8s_creds: &create_k8s_creds
  - bash scripts/gitlab_section.sh creds "Create K8s Credentials" make skampi-credentials

# must have K8S_CHART set correctly
.deploy_chart_before:
  before_script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - *create_k8s_creds
    - make k8s-install-chart
    - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
    - make skampi-wait-all

.deploy_chart:
  script:
    - make k8s-install-chart
    - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
    - make skampi-wait-all

.test_deployment:
  script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - echo "############## Running Skampi core tests"
    - make k8s-test
    - echo "############## Running Skampi component tests"
    - make skampi-component-tests
    - echo "############## Build Output"
    - find ./build
    - echo "############## EXTRA MAKE VARS OUTPUT"
    - make skampi-vars
    - echo "#####################################"
    - make skampi-upload-test-results SKALLOP_VERSION=$SKALLOP_VERSION CAR_PYPI_REPOSITORY_URL=$CAR_PYPI_REPOSITORY_URL

.deploy_chart_and_test_integration:
  script:
    - make k8s-install-chart
    - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
    - make skampi-wait-all
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - echo "############## Running Skampi core tests"
    - make k8s-test
    - echo "############## Running Skampi component tests"
    - make skampi-component-tests
    - echo "############## Build Output"
    - find ./build
    - echo "############## EXTRA MAKE VARS OUTPUT"
    - make skampi-vars
    - echo "#####################################"
    - make skampi-links
    - make skampi-upload-test-results SKALLOP_VERSION=$SKALLOP_VERSION CAR_PYPI_REPOSITORY_URL=$CAR_PYPI_REPOSITORY_URL

.uninstall_chart_before:
  before_script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - make k8s-uninstall-chart || true
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - make k8s-delete-namespace
    - make delete-sdp-namespace

.uninstall_chart:
  script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - make k8s-uninstall-chart || true
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - make k8s-delete-namespace
    - make delete-sdp-namespace

.uninstall_chart_after:
  after_script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - make k8s-uninstall-chart || true
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - make k8s-delete-namespace
    - make delete-sdp-namespace
    - make skampi-upload-test-results SKALLOP_VERSION=$SKALLOP_VERSION CAR_PYPI_REPOSITORY_URL=$CAR_PYPI_REPOSITORY_URL

## Not currently used!!!
.deploy_test_destroy:
  stage: test
  extends:
    - .deploy_chart_before
    - .test_deployment
    - .uninstall_chart_after
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always
