# ################################################
# # SKA Low CI Stages
# ################################################

# low merge blocking job - must pass for pipeline success
low-test:
  stage: test
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_JOB_ID"
    ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
    DISABLE_MAINTAIN_ON: "True"
    TEST_ENV: "BUILD_IN"
    ATTR_SYNCH_ENABLED_GLOBALLY: "True"
    COUNT: 1
    EXIT_AT_FAIL: "True"
    CAPTURE_LOGS: "True"
    DEBUG_ENTRYPOINT: "True"
    DEBUG_ENTRYPOINT_EXTENDED: "True"
    LIVE_LOGGING_EXTENDED: "True"
  extends:
    - .tags_default
  script:
    - !reference [.deploy_chart_before, before_script]
    - !reference [.test_deployment, script]
    - !reference [.uninstall_chart, script]
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always
  retry: 1

clean-low-test:
  stage: clean_test_env
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_JOB_ID-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_JOB_ID"
    ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
    DISABLE_MAINTAIN_ON: "True"
    TEST_ENV: "BUILD_OUT"
    COUNT: 1
    TEL: low
  extends:
    - .tags_default
  script:
    - !reference [.uninstall_chart_after, after_script]
  when: always
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
  allow_failure: true

# teardown integration on stop
low_uninstall_integration:
  stage: clean_integration
  extends:
    - .tags_default
    - .uninstall_chart
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "integration-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "integration-$CONFIG"
    KUBE_NAMESPACE_SDP: "integration-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-integration-$CONFIG"
    ARCHIVER_DBNAME: "integration_$CONFIG_archiver_db"
    KEEP_NAMESPACE: "true"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $DELETE == "true"
  environment:
    name: "integration-low"
    action: stop

# deploy low staging on tag
low_deploy_staging:
  stage: deploy_staging
  extends:
    - .tags_default
    - .uninstall_chart_before
    - .deploy_chart
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "staging-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "staging-$CONFIG"
    KUBE_NAMESPACE_SDP: "staging-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-staging-$CONFIG"
    ARCHIVER_DBNAME: "staging_$CONFIG_archiver_db"
    MARK: "not infra"
    KEEP_NAMESPACE: "true"
  environment:
    name: "staging-low"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    on_stop: low_uninstall_staging
  rules:
    - if: $CI_COMMIT_TAG

# teardown staging on stop
low_uninstall_staging:
  stage: clean_staging
  extends:
    - .tags_default
    - .uninstall_chart
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "staging-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "staging-$CONFIG"
    KUBE_NAMESPACE_SDP: "staging-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-staging-$CONFIG"
    ARCHIVER_DBNAME: "staging_$CONFIG_archiver_db"
    KEEP_NAMESPACE: "true"
  rules:
    - if: $CI_COMMIT_TAG
    - if: $DELETE == "true"
  environment:
    name: "staging-low"
    action: stop

# Low on-demand deployment
low_on_demand_deploy:
  stage: build
  variables:
    CONFIG: low
    DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
    K8S_CHART: "$DEPLOYMENT_CONFIGURATION"
    HELM_RELEASE: "test-$CONFIG-$CI_JOB_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CONFIG-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    ARCHIVER_DBNAME: "$CI_JOB_ID-$CONFIG_archiver_db"
  extends:
    - .tags_default
    - .deploy_chart_before
  script:
    - make skampi-links
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
  when: manual
  allow_failure: true
