# ################################################
# # Common CI Stages
# ################################################

## Create Base CI Image
include:
  # OCI Image
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/oci-image.gitlab-ci.yml"

  # Helm Charts
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/helm-chart.gitlab-ci.yml"

  # Docs - only build as stress tests use 'public'
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/docs-build.gitlab-ci.yml"

  # release steps
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/release.gitlab-ci.yml"

  # .post steps
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/finaliser.gitlab-ci.yml"

## Override oci image jobs to build base image
oci-image-build:
  stage: .pre # We need to override the stage so that we can built the base image first
  rules:
  # Only build if there's a change in dependencies or dockerfile
  # - changes: # TODO: Enable this once the lifecycle is sorted, right now build it and tag with commit-shory-sha everytime
  - exists:
       - images/ska-skampi-ci-base/Dockerfile
       - poetry.lock
  - if: $REBUILD_IMAGES

# Override jobs so that we can detach the dependencies by using needs keyword
# Optional is needed as the base image won't be built everytime unless there are changes
oci-image-lint:
  image: $CI_BASE_IMAGE
  needs:
  - job: oci-image-build
    optional: true

oci-image-scan:
  image: $CI_BASE_IMAGE
  needs:
  - job: oci-image-build
    optional: true

# Disable publishing for base image
# Note that we could add build, lint and scan templates separately as an alternative
# but this is easier to maintain
oci-image-publish:
  when: never

helm-chart-lint:
  image: $CI_BASE_IMAGE
  needs:
  - job: oci-image-build
    optional: true

helm-chart-build:
  image: $CI_BASE_IMAGE
  needs:
  - job: oci-image-build
    optional: true

helm-chart-publish:
  image: $CI_BASE_IMAGE
  needs:
  - job: helm-chart-build
    optional: true

docs-build:
  image: $CI_BASE_IMAGE
  needs:
  - job: oci-image-build
    optional: true

docs-pages:
  image: $CI_BASE_IMAGE
  needs:
  # We are rebuilding the docs here so we don't need to depend on docs-build
  - job: oci-image-build
    optional: true

build-changelog:
  image: $CI_BASE_IMAGE
  needs: 
  - job: oci-image-build
    optional: true

# Template job for testing
.test:
  image: $CI_BASE_IMAGE
  needs:
  - job: oci-image-build
    optional: true
  tags:
    - k8srunner
  before_script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - bash scripts/gitlab_section.sh install "Install Skampi Charts" make k8s-install-chart
    - bash scripts/gitlab_section.sh get_all "Check all k8s resources in $KUBE_NAMESPACE" kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
    - bash scripts/gitlab_section.sh wait_for_it "Wait for all config jobs to complete" make skampi-wait-all
  script:
    - make k8s-install-chart
    - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
    - make skampi-wait-all
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - echo "Running Skampi core tests"
    - make k8s-test-runner
    - echo "Build Output"
    - find ./build
    - bash scripts/gitlab_section.sh extra_vars "Dump Extra Vars" make skampi-vars
    - |-
      [[ ! -z $NO_SKAMPI_LINKS ]] || make skampi-links
    - make skampi-upload-test-results
  environment:
    name: test/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always
  retry: 1

## TODO: Will be reviewed and deleted

# create namespace scoped credentials
.create_k8s_creds: &create_k8s_creds
  - bash scripts/gitlab_section.sh creds "Create K8s Credentials" make skampi-credentials

# must have K8S_CHART set correctly
.deploy_chart_before:
  before_script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - *create_k8s_creds
    - bash scripts/gitlab_section.sh install "Install Skampi Charts" make k8s-install-chart
    - bash scripts/gitlab_section.sh get_all "Check all k8s resources in $KUBE_NAMESPACE" kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
    - bash scripts/gitlab_section.sh wait_for_it "Wait for all config jobs to complete" make skampi-wait-all

.deploy_chart:
  script:
    - make k8s-install-chart
    - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
    - make skampi-wait-all

.deploy_chart_and_test_integration:
  script:
    - make k8s-install-chart
    - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
    - make skampi-wait-all
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - echo "############## Running Skampi core tests"
    - make k8s-test-runner
    - echo "############## Running Skampi component tests"
    - make skampi-component-tests
    - echo "############## Build Output"
    - find ./build
    - echo "############## EXTRA MAKE VARS OUTPUT"
    - make skampi-vars
    - echo "#####################################"
    - |-
      [[ ! -z $NO_SKAMPI_LINKS ]] || make skampi-links
    - make skampi-upload-test-results

.uninstall_chart_before:
  before_script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - make k8s-uninstall-chart || true
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - make k8s-delete-namespace
    - make delete-sdp-namespace

.uninstall_chart:
  script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - make k8s-uninstall-chart || true
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - make k8s-delete-namespace
    - make delete-sdp-namespace

.uninstall_chart_after:
  after_script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash scripts/gitlab_section.sh vars "Make config dump" make vars
    - make k8s-uninstall-chart || true
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - make k8s-delete-namespace
    - make delete-sdp-namespace
