#!/usr/bin/env bash

# Shellscript support function file for Kubernetes Make targets

function k8sChartInstall() {
	if [ -z "$K8S_CHART" ] ; then
		echo "k8sChartInstall: Missing K8S_CHART"
        exit 1
	fi

    if [[ -z "${K8S_HELM_REPOSITORY}" ]]; then
		echo "k8sChartInstall: K8S_HELM_REPOSITORY: https://artefact.skao.int/repository/helm-internal"
		K8S_HELM_REPOSITORY="https://artefact.skao.int/repository/helm-internal"
    fi

	if ! [[ $k8s_ver_check -eq 0 ]]; then
		echo "k8sChartInstall: could not update K8S_HELM_REPOSITORY ${K8S_HELM_REPOSITORY}(${K8S_REPO})"
        exit 1
    fi

	echo "install-chart: install ${K8S_CHART} release: ${HELM_RELEASE} in Namespace: ${KUBE_NAMESPACE} with params: ${K8S_CHART_PARAMS}"

	# Add SKA Helm Repository
	helm repo list | grep skatelescope || helm repo add skatelescope $K8S_HELM_REPOSITORY
	
    which jq >/dev/null 2>&1 || (echo "jq not installed - see https://stedolan.github.io/jq/"; exit 1;)
    K8S_CHART_VERSION=`helm search repo -o json ${K8S_CHART} | jq -r '.[].version' | head -1`;
    if [[ -z "${K8S_CHART_VERSION}" ]]; then
		echo "k8sChartInstall: version for ${K8S_CHART} in ${K8S_HELM_REPOSITORY} could not be found"
        exit 1
    fi

    echo "Installing chart version: ${K8S_CHART_VERSION}"

	if [[ -z "${KUBE_NAMESPACE}" ]]; then
		echo "k8sChartInstall: KUBE_NAMESPACE: default"
		KUBE_NAMESPACE="default"
    fi

	if [[ -z "${HELM_RELEASE}" ]]; then
		echo "k8sChartInstall: HELM_RELEASE: test"
		HELM_RELEASE="test"
    fi

	echo "helm upgrade --install $HELM_RELEASE $K8S_CHART_PARAMS skatelescope/$K8S_CHART --namespace $KUBE_NAMESPACE"
	helm upgrade --install $HELM_RELEASE $K8S_CHART_PARAMS skatelescope/$K8S_CHART --namespace $KUBE_NAMESPACE
}

